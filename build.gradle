buildscript {
    ext {
        springBootVersion = "2.1.9.RELEASE"
    }

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
        )
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "2.1.9.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

group 'com.young.eshop'
version '1.0.0-SNAPSHOT'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/java', 'src/main/resources']
        }
    }
}
jar {
    from('src/main/java') {
        include 'com/young/**/mapping/*.xml'
    }
}

springBoot {
    buildInfo()
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    mavenCentral()
}

test {
    useJUnitPlatform()
}


ext {
    lombokVersion = "1.18.12"
    springBootVersion = "2.1.9.RELEASE"
    junitVersion = "5.2.0"
}
dependencies {

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compile(
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}",
            'org.apache.commons:commons-pool2:2.8.0',
            'org.apache.commons:commons-lang3:3.8',
            'mysql:mysql-connector-java:5.1.8',
            'com.alibaba:fastjson:1.2.62'
    )
    testCompile(
            'org.junit.platform:junit-platform-launcher:1.2.0',
            "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
            "org.junit.vintage:junit-vintage-engine:${junitVersion}"
    )
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}
